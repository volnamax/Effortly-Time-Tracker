

CREATE TYPE role_t AS ENUM ('ADMIN', 'USER', 'GUEST');
CREATE TYPE status_t AS ENUM ('NO_ACTIVE', 'ACTIVE');
CREATE TYPE priority_t AS ENUM ('IMPORTANT_URGENTLY', 'NO_IMPORTANT_URGENTLY', 'IMPORTANT_NO_URGENTLY', 'NO_IMPORTANT_NO_URGENTLY');


CREATE TABLE "user_app" (
  "id_user" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_name" varchar(28),
  "user_secondname" varchar(28),
  "email" varchar(256) UNIQUE,
  "role" role_t,
  "data_sign_in" timestamp,
  "data_last_log_in" timestamp
);

CREATE TABLE "todo_node" (
  "id_todo" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer,
  "content" text,
  "status" status_t,
  "priority" priority_t,
  "due_date" timestamp
);

CREATE TABLE "project" (
  "id_project" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(128),
  "description" text,
  "user_id" integer,
  "group_id" integer UNIQUE
);

CREATE TABLE "table" (
  "id_table" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "project_id" integer,
  "name" varchar(128),
  "description" text,
  "status" status_t
);

CREATE TABLE "task" (
  "id_task" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "table_id" integer,
  "name" varchar(128),
  "description" text,
  "status" status_t,
  "sum_timer" timestamp,
  "start_timer" timestamp,
  "time_add_task" timestamp,
  "time_end_task" timestamp
);

CREATE TABLE "tag" (
  "id_tags" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(128),
    "color" VARCHAR(7), -- Используем VARCHAR для хранения значения RGB
  "project_id" integer
);

CREATE TABLE "task_tag" (
  "task_id" integer,
  "tag_id" integer,
  PRIMARY KEY ("task_id", "tag_id")
);

CREATE TABLE "group_user" (
  "id_group" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(128),
  "description" text
);

CREATE TABLE "group_member" (
  "user_id" integer,
  "group_id" integer,
  PRIMARY KEY ("user_id", "group_id")
);

ALTER TABLE "todo_node" ADD FOREIGN KEY ("user_id") REFERENCES "user_app" ("id_user");
ALTER TABLE "project" ADD FOREIGN KEY ("user_id") REFERENCES "user_app" ("id_user");


ALTER TABLE "project" ADD FOREIGN KEY ("group_id") REFERENCES "group_user" ("id_group");

ALTER TABLE "table" ADD FOREIGN KEY ("project_id") REFERENCES "project" ("id_project");

ALTER TABLE "task" ADD FOREIGN KEY ("table_id") REFERENCES "table" ("id_table");

ALTER TABLE "tag" ADD FOREIGN KEY ("project_id") REFERENCES "project" ("id_project");

ALTER TABLE "task_tag" ADD FOREIGN KEY ("task_id") REFERENCES "task" ("id_task");

ALTER TABLE "task_tag" ADD FOREIGN KEY ("tag_id") REFERENCES "tag" ("id_tags");

ALTER TABLE "group_member" ADD FOREIGN KEY ("user_id") REFERENCES "user_app" ("id_user");

ALTER TABLE "group_member" ADD FOREIGN KEY ("group_id") REFERENCES "group_user" ("id_group");
