name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Обеспечивает необходимые права для `GITHUB_TOKEN`

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:17.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1564
          POSTGRES_DB: postgresdocker
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for Database
        run: |
          for i in {1..10}; do
            nc -z localhost 5432 && echo "Database is ready" && exit 0
            echo "Waiting for database..."
            sleep 5
          done
          echo "Database not ready" && exit 1

      - name: Install PostgreSQL Client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Initialize Database
        run: |
          PGPASSWORD=1564 psql -h localhost -U postgres -d postgresdocker -f src/Effortly-Time-Tracker/src/main/resources/sql/CreateTables.sql
        env:
          PGPASSWORD: 1564

      - name: Verify Roles in Database
        run: |
          PGPASSWORD=1564 psql -h localhost -U postgres -d postgresdocker -c "SELECT * FROM roles;"
        env:
          PGPASSWORD: 1564

      - name: Install Allure Commandline
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://github.com/allure-framework/allure2/releases/download/2.30.0/allure-2.30.0.zip -O allure.zip
          sudo unzip allure.zip -d /opt/
          sudo ln -s /opt/allure-2.30.0/bin/allure /usr/bin/allure
          rm allure.zip
          allure --version

      - name: Build and Test with Maven
        env:
          SPRING_DATASOURCE_URL: "jdbc:postgresql://localhost:5432/postgresdocker"
          SPRING_DATASOURCE_USERNAME: "postgres"
          SPRING_DATASOURCE_PASSWORD: "1564"
        run: mvn -f src/Effortly-Time-Tracker/pom.xml clean test

      - name: Generate Allure Report
        run: allure generate target/allure-results --clean -o target/allure-report

      - name: List Allure Report Files
        run: ls -la target/allure-report

      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: target/allure-report

      - name: Deploy Allure Report to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/allure-report
