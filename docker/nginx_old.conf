worker_processes 1;

events { worker_connections 1024; }

http {
    server {
        listen 80;
        server_name localhost;

        # Главная страница SPA
        # Отдаёт главный файл index.html для SPA и обрабатывает маршруты внутри SPA
        location / {
            root /usr/share/nginx/html/my-spa;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # Изображения для SPA
        # Позволяет доступ к файлам изображений для главной страницы SPA
        location /img/ {
            root /usr/share/nginx/html/my-spa;
        }

        # Дополнительный маршрут для тестовой страницы SPA
        # Использует те же настройки, что и главный маршрут SPA
        location /test {
            root /usr/share/nginx/html/my-spa;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # Изображения для тестовой страницы SPA
        location /test/img/ {
            alias /usr/share/nginx/html/my-spa/img/;
        }

        # Отдача readme.html по пути /documentation
        # Статический файл с описанием документации
        location /documentation {
            alias /usr/share/nginx/html/static/readme.html;
            default_type text/html; # Устанавливает тип контента как HTML
        }

        # Изображения для документации
        # Разрешает доступ к изображениям внутри документации
        location /documentation/img/ {
            alias /usr/share/nginx/html/static/img/;
        }

        # Редирект на админ-панель pgAdmin
        # При запросе /admin пользователь перенаправляется на логин-панель pgAdmin
        location = /admin {
            return 302 http://localhost:5050/login?next=%2F;
        }

        # Статус сервера Nginx
        # Отображает базовую информацию о состоянии сервера Nginx
        location /status {
            stub_status;
        }

        # Proxy для Swagger UI
        # Проксирует запросы на Swagger UI приложения Spring Boot
        location /api/v2/ {
            proxy_pass http://app:8080/swagger-ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy для swagger-config
        # Проксирует запросы для получения конфигурации Swagger
        location = /v3/api-docs/swagger-config {
            proxy_pass http://app:8080/v3/api-docs/swagger-config;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy для API-документации
        # Проксирует запросы на API-документацию Swagger
        location /v3/api-docs {
            proxy_pass http://app:8080/v3/api-docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy для статических файлов Swagger UI
        # Проксирует статические файлы Swagger UI
        location /swagger-ui/ {
            proxy_pass http://app:8080/swagger-ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
